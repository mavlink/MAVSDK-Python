# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import info_pb2 as info_dot_info__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in info/info_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class InfoServiceStub(object):
    """Provide information about the hardware and/or software of a system.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetFlightInformation = channel.unary_unary(
                '/mavsdk.rpc.info.InfoService/GetFlightInformation',
                request_serializer=info_dot_info__pb2.GetFlightInformationRequest.SerializeToString,
                response_deserializer=info_dot_info__pb2.GetFlightInformationResponse.FromString,
                _registered_method=True)
        self.GetIdentification = channel.unary_unary(
                '/mavsdk.rpc.info.InfoService/GetIdentification',
                request_serializer=info_dot_info__pb2.GetIdentificationRequest.SerializeToString,
                response_deserializer=info_dot_info__pb2.GetIdentificationResponse.FromString,
                _registered_method=True)
        self.GetProduct = channel.unary_unary(
                '/mavsdk.rpc.info.InfoService/GetProduct',
                request_serializer=info_dot_info__pb2.GetProductRequest.SerializeToString,
                response_deserializer=info_dot_info__pb2.GetProductResponse.FromString,
                _registered_method=True)
        self.GetVersion = channel.unary_unary(
                '/mavsdk.rpc.info.InfoService/GetVersion',
                request_serializer=info_dot_info__pb2.GetVersionRequest.SerializeToString,
                response_deserializer=info_dot_info__pb2.GetVersionResponse.FromString,
                _registered_method=True)
        self.GetSpeedFactor = channel.unary_unary(
                '/mavsdk.rpc.info.InfoService/GetSpeedFactor',
                request_serializer=info_dot_info__pb2.GetSpeedFactorRequest.SerializeToString,
                response_deserializer=info_dot_info__pb2.GetSpeedFactorResponse.FromString,
                _registered_method=True)
        self.SubscribeFlightInformation = channel.unary_stream(
                '/mavsdk.rpc.info.InfoService/SubscribeFlightInformation',
                request_serializer=info_dot_info__pb2.SubscribeFlightInformationRequest.SerializeToString,
                response_deserializer=info_dot_info__pb2.FlightInformationResponse.FromString,
                _registered_method=True)


class InfoServiceServicer(object):
    """Provide information about the hardware and/or software of a system.
    """

    def GetFlightInformation(self, request, context):
        """Get flight information of the system.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIdentification(self, request, context):
        """Get the identification of the system.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProduct(self, request, context):
        """Get product information of the system.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersion(self, request, context):
        """Get the version information of the system.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpeedFactor(self, request, context):
        """Get the speed factor of a simulation (with lockstep a simulation can run faster or slower than realtime).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeFlightInformation(self, request, context):
        """Subscribe to 'flight information' updates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InfoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetFlightInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFlightInformation,
                    request_deserializer=info_dot_info__pb2.GetFlightInformationRequest.FromString,
                    response_serializer=info_dot_info__pb2.GetFlightInformationResponse.SerializeToString,
            ),
            'GetIdentification': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIdentification,
                    request_deserializer=info_dot_info__pb2.GetIdentificationRequest.FromString,
                    response_serializer=info_dot_info__pb2.GetIdentificationResponse.SerializeToString,
            ),
            'GetProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProduct,
                    request_deserializer=info_dot_info__pb2.GetProductRequest.FromString,
                    response_serializer=info_dot_info__pb2.GetProductResponse.SerializeToString,
            ),
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=info_dot_info__pb2.GetVersionRequest.FromString,
                    response_serializer=info_dot_info__pb2.GetVersionResponse.SerializeToString,
            ),
            'GetSpeedFactor': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpeedFactor,
                    request_deserializer=info_dot_info__pb2.GetSpeedFactorRequest.FromString,
                    response_serializer=info_dot_info__pb2.GetSpeedFactorResponse.SerializeToString,
            ),
            'SubscribeFlightInformation': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeFlightInformation,
                    request_deserializer=info_dot_info__pb2.SubscribeFlightInformationRequest.FromString,
                    response_serializer=info_dot_info__pb2.FlightInformationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mavsdk.rpc.info.InfoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('mavsdk.rpc.info.InfoService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class InfoService(object):
    """Provide information about the hardware and/or software of a system.
    """

    @staticmethod
    def GetFlightInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.info.InfoService/GetFlightInformation',
            info_dot_info__pb2.GetFlightInformationRequest.SerializeToString,
            info_dot_info__pb2.GetFlightInformationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetIdentification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.info.InfoService/GetIdentification',
            info_dot_info__pb2.GetIdentificationRequest.SerializeToString,
            info_dot_info__pb2.GetIdentificationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.info.InfoService/GetProduct',
            info_dot_info__pb2.GetProductRequest.SerializeToString,
            info_dot_info__pb2.GetProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.info.InfoService/GetVersion',
            info_dot_info__pb2.GetVersionRequest.SerializeToString,
            info_dot_info__pb2.GetVersionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSpeedFactor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.info.InfoService/GetSpeedFactor',
            info_dot_info__pb2.GetSpeedFactorRequest.SerializeToString,
            info_dot_info__pb2.GetSpeedFactorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeFlightInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.info.InfoService/SubscribeFlightInformation',
            info_dot_info__pb2.SubscribeFlightInformationRequest.SerializeToString,
            info_dot_info__pb2.FlightInformationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
