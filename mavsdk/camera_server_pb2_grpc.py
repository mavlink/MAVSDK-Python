# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import camera_server_pb2 as camera__server_dot_camera__server__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in camera_server/camera_server_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class CameraServerServiceStub(object):
    """Provides handling of camera interface
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetInformation = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/SetInformation',
                request_serializer=camera__server_dot_camera__server__pb2.SetInformationRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.SetInformationResponse.FromString,
                _registered_method=True)
        self.SetVideoStreaming = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/SetVideoStreaming',
                request_serializer=camera__server_dot_camera__server__pb2.SetVideoStreamingRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.SetVideoStreamingResponse.FromString,
                _registered_method=True)
        self.SetInProgress = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/SetInProgress',
                request_serializer=camera__server_dot_camera__server__pb2.SetInProgressRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.SetInProgressResponse.FromString,
                _registered_method=True)
        self.SubscribeTakePhoto = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeTakePhoto',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeTakePhotoRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.TakePhotoResponse.FromString,
                _registered_method=True)
        self.RespondTakePhoto = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondTakePhoto',
                request_serializer=camera__server_dot_camera__server__pb2.RespondTakePhotoRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondTakePhotoResponse.FromString,
                _registered_method=True)
        self.SubscribeStartVideo = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeStartVideo',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeStartVideoRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.StartVideoResponse.FromString,
                _registered_method=True)
        self.RespondStartVideo = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondStartVideo',
                request_serializer=camera__server_dot_camera__server__pb2.RespondStartVideoRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondStartVideoResponse.FromString,
                _registered_method=True)
        self.SubscribeStopVideo = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeStopVideo',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeStopVideoRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.StopVideoResponse.FromString,
                _registered_method=True)
        self.RespondStopVideo = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondStopVideo',
                request_serializer=camera__server_dot_camera__server__pb2.RespondStopVideoRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondStopVideoResponse.FromString,
                _registered_method=True)
        self.SubscribeStartVideoStreaming = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeStartVideoStreaming',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeStartVideoStreamingRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.StartVideoStreamingResponse.FromString,
                _registered_method=True)
        self.RespondStartVideoStreaming = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondStartVideoStreaming',
                request_serializer=camera__server_dot_camera__server__pb2.RespondStartVideoStreamingRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondStartVideoStreamingResponse.FromString,
                _registered_method=True)
        self.SubscribeStopVideoStreaming = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeStopVideoStreaming',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeStopVideoStreamingRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.StopVideoStreamingResponse.FromString,
                _registered_method=True)
        self.RespondStopVideoStreaming = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondStopVideoStreaming',
                request_serializer=camera__server_dot_camera__server__pb2.RespondStopVideoStreamingRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondStopVideoStreamingResponse.FromString,
                _registered_method=True)
        self.SubscribeSetMode = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeSetMode',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeSetModeRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.SetModeResponse.FromString,
                _registered_method=True)
        self.RespondSetMode = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondSetMode',
                request_serializer=camera__server_dot_camera__server__pb2.RespondSetModeRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondSetModeResponse.FromString,
                _registered_method=True)
        self.SubscribeStorageInformation = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeStorageInformation',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeStorageInformationRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.StorageInformationResponse.FromString,
                _registered_method=True)
        self.RespondStorageInformation = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondStorageInformation',
                request_serializer=camera__server_dot_camera__server__pb2.RespondStorageInformationRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondStorageInformationResponse.FromString,
                _registered_method=True)
        self.SubscribeCaptureStatus = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeCaptureStatus',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeCaptureStatusRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.CaptureStatusResponse.FromString,
                _registered_method=True)
        self.RespondCaptureStatus = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondCaptureStatus',
                request_serializer=camera__server_dot_camera__server__pb2.RespondCaptureStatusRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondCaptureStatusResponse.FromString,
                _registered_method=True)
        self.SubscribeFormatStorage = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeFormatStorage',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeFormatStorageRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.FormatStorageResponse.FromString,
                _registered_method=True)
        self.RespondFormatStorage = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondFormatStorage',
                request_serializer=camera__server_dot_camera__server__pb2.RespondFormatStorageRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondFormatStorageResponse.FromString,
                _registered_method=True)
        self.SubscribeResetSettings = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeResetSettings',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeResetSettingsRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.ResetSettingsResponse.FromString,
                _registered_method=True)
        self.RespondResetSettings = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondResetSettings',
                request_serializer=camera__server_dot_camera__server__pb2.RespondResetSettingsRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondResetSettingsResponse.FromString,
                _registered_method=True)
        self.SubscribeZoomInStart = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeZoomInStart',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeZoomInStartRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.ZoomInStartResponse.FromString,
                _registered_method=True)
        self.RespondZoomInStart = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondZoomInStart',
                request_serializer=camera__server_dot_camera__server__pb2.RespondZoomInStartRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondZoomInStartResponse.FromString,
                _registered_method=True)
        self.SubscribeZoomOutStart = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeZoomOutStart',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeZoomOutStartRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.ZoomOutStartResponse.FromString,
                _registered_method=True)
        self.RespondZoomOutStart = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondZoomOutStart',
                request_serializer=camera__server_dot_camera__server__pb2.RespondZoomOutStartRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondZoomOutStartResponse.FromString,
                _registered_method=True)
        self.SubscribeZoomStop = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeZoomStop',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeZoomStopRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.ZoomStopResponse.FromString,
                _registered_method=True)
        self.RespondZoomStop = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondZoomStop',
                request_serializer=camera__server_dot_camera__server__pb2.RespondZoomStopRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondZoomStopResponse.FromString,
                _registered_method=True)
        self.SubscribeZoomRange = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeZoomRange',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeZoomRangeRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.ZoomRangeResponse.FromString,
                _registered_method=True)
        self.RespondZoomRange = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondZoomRange',
                request_serializer=camera__server_dot_camera__server__pb2.RespondZoomRangeRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondZoomRangeResponse.FromString,
                _registered_method=True)
        self.SetTrackingRectangleStatus = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/SetTrackingRectangleStatus',
                request_serializer=camera__server_dot_camera__server__pb2.SetTrackingRectangleStatusRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.SetTrackingRectangleStatusResponse.FromString,
                _registered_method=True)
        self.SetTrackingOffStatus = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/SetTrackingOffStatus',
                request_serializer=camera__server_dot_camera__server__pb2.SetTrackingOffStatusRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.SetTrackingOffStatusResponse.FromString,
                _registered_method=True)
        self.SubscribeTrackingPointCommand = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeTrackingPointCommand',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeTrackingPointCommandRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.TrackingPointCommandResponse.FromString,
                _registered_method=True)
        self.SubscribeTrackingRectangleCommand = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeTrackingRectangleCommand',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeTrackingRectangleCommandRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.TrackingRectangleCommandResponse.FromString,
                _registered_method=True)
        self.SubscribeTrackingOffCommand = channel.unary_stream(
                '/mavsdk.rpc.camera_server.CameraServerService/SubscribeTrackingOffCommand',
                request_serializer=camera__server_dot_camera__server__pb2.SubscribeTrackingOffCommandRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.TrackingOffCommandResponse.FromString,
                _registered_method=True)
        self.RespondTrackingPointCommand = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondTrackingPointCommand',
                request_serializer=camera__server_dot_camera__server__pb2.RespondTrackingPointCommandRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondTrackingPointCommandResponse.FromString,
                _registered_method=True)
        self.RespondTrackingRectangleCommand = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondTrackingRectangleCommand',
                request_serializer=camera__server_dot_camera__server__pb2.RespondTrackingRectangleCommandRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondTrackingRectangleCommandResponse.FromString,
                _registered_method=True)
        self.RespondTrackingOffCommand = channel.unary_unary(
                '/mavsdk.rpc.camera_server.CameraServerService/RespondTrackingOffCommand',
                request_serializer=camera__server_dot_camera__server__pb2.RespondTrackingOffCommandRequest.SerializeToString,
                response_deserializer=camera__server_dot_camera__server__pb2.RespondTrackingOffCommandResponse.FromString,
                _registered_method=True)


class CameraServerServiceServicer(object):
    """Provides handling of camera interface
    """

    def SetInformation(self, request, context):
        """Sets the camera information. This must be called as soon as the camera server is created.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVideoStreaming(self, request, context):
        """Sets video streaming settings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetInProgress(self, request, context):
        """Sets image capture in progress status flags. This should be set to true when the camera is busy taking a photo and false when it is done.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeTakePhoto(self, request, context):
        """Subscribe to image capture requests. Each request received should respond to using RespondTakePhoto.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondTakePhoto(self, request, context):
        """Respond to an image capture request from SubscribeTakePhoto.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeStartVideo(self, request, context):
        """Subscribe to start video requests. Each request received should respond to using RespondStartVideo
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondStartVideo(self, request, context):
        """Subscribe to stop video requests. Each request received should respond using StopVideoResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeStopVideo(self, request, context):
        """Subscribe to stop video requests. Each request received should response to using RespondStopVideo
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondStopVideo(self, request, context):
        """Respond to stop video request from SubscribeStopVideo.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeStartVideoStreaming(self, request, context):
        """Subscribe to start video streaming requests. Each request received should response to using RespondStartVideoStreaming
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondStartVideoStreaming(self, request, context):
        """Respond to start video streaming from SubscribeStartVideoStreaming.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeStopVideoStreaming(self, request, context):
        """Subscribe to stop video streaming requests. Each request received should response to using RespondStopVideoStreaming
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondStopVideoStreaming(self, request, context):
        """Respond to stop video streaming from SubscribeStopVideoStreaming.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeSetMode(self, request, context):
        """Subscribe to set camera mode requests. Each request received should response to using RespondSetMode
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondSetMode(self, request, context):
        """Respond to set camera mode from SubscribeSetMode.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeStorageInformation(self, request, context):
        """Subscribe to camera storage information requests. Each request received should response to using RespondStorageInformation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondStorageInformation(self, request, context):
        """Respond to camera storage information from SubscribeStorageInformation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeCaptureStatus(self, request, context):
        """Subscribe to camera capture status requests. Each request received should response to using RespondCaptureStatus
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondCaptureStatus(self, request, context):
        """Respond to camera capture status from SubscribeCaptureStatus.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeFormatStorage(self, request, context):
        """Subscribe to format storage requests. Each request received should response to using RespondFormatStorage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondFormatStorage(self, request, context):
        """Respond to format storage from SubscribeFormatStorage.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeResetSettings(self, request, context):
        """Subscribe to reset settings requests. Each request received should response to using RespondResetSettings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondResetSettings(self, request, context):
        """Respond to reset settings from SubscribeResetSettings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeZoomInStart(self, request, context):
        """Subscribe to zoom in start command
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondZoomInStart(self, request, context):
        """Respond to zoom in start.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeZoomOutStart(self, request, context):
        """Subscribe to zoom out start command
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondZoomOutStart(self, request, context):
        """Respond to zoom out start.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeZoomStop(self, request, context):
        """Subscribe to zoom stop command
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondZoomStop(self, request, context):
        """Respond to zoom stop.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeZoomRange(self, request, context):
        """Subscribe to zoom range command
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondZoomRange(self, request, context):
        """Respond to zoom range.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTrackingRectangleStatus(self, request, context):
        """Set/update the current rectangle tracking status.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTrackingOffStatus(self, request, context):
        """Set the current tracking status to off.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeTrackingPointCommand(self, request, context):
        """Subscribe to incoming tracking point command.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeTrackingRectangleCommand(self, request, context):
        """Subscribe to incoming tracking rectangle command.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeTrackingOffCommand(self, request, context):
        """Subscribe to incoming tracking off command.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondTrackingPointCommand(self, request, context):
        """Respond to an incoming tracking point command.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondTrackingRectangleCommand(self, request, context):
        """Respond to an incoming tracking rectangle command.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RespondTrackingOffCommand(self, request, context):
        """Respond to an incoming tracking off command.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CameraServerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetInformation,
                    request_deserializer=camera__server_dot_camera__server__pb2.SetInformationRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.SetInformationResponse.SerializeToString,
            ),
            'SetVideoStreaming': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVideoStreaming,
                    request_deserializer=camera__server_dot_camera__server__pb2.SetVideoStreamingRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.SetVideoStreamingResponse.SerializeToString,
            ),
            'SetInProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.SetInProgress,
                    request_deserializer=camera__server_dot_camera__server__pb2.SetInProgressRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.SetInProgressResponse.SerializeToString,
            ),
            'SubscribeTakePhoto': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeTakePhoto,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeTakePhotoRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.TakePhotoResponse.SerializeToString,
            ),
            'RespondTakePhoto': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondTakePhoto,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondTakePhotoRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondTakePhotoResponse.SerializeToString,
            ),
            'SubscribeStartVideo': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeStartVideo,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeStartVideoRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.StartVideoResponse.SerializeToString,
            ),
            'RespondStartVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondStartVideo,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondStartVideoRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondStartVideoResponse.SerializeToString,
            ),
            'SubscribeStopVideo': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeStopVideo,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeStopVideoRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.StopVideoResponse.SerializeToString,
            ),
            'RespondStopVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondStopVideo,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondStopVideoRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondStopVideoResponse.SerializeToString,
            ),
            'SubscribeStartVideoStreaming': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeStartVideoStreaming,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeStartVideoStreamingRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.StartVideoStreamingResponse.SerializeToString,
            ),
            'RespondStartVideoStreaming': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondStartVideoStreaming,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondStartVideoStreamingRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondStartVideoStreamingResponse.SerializeToString,
            ),
            'SubscribeStopVideoStreaming': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeStopVideoStreaming,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeStopVideoStreamingRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.StopVideoStreamingResponse.SerializeToString,
            ),
            'RespondStopVideoStreaming': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondStopVideoStreaming,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondStopVideoStreamingRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondStopVideoStreamingResponse.SerializeToString,
            ),
            'SubscribeSetMode': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeSetMode,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeSetModeRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.SetModeResponse.SerializeToString,
            ),
            'RespondSetMode': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondSetMode,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondSetModeRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondSetModeResponse.SerializeToString,
            ),
            'SubscribeStorageInformation': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeStorageInformation,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeStorageInformationRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.StorageInformationResponse.SerializeToString,
            ),
            'RespondStorageInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondStorageInformation,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondStorageInformationRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondStorageInformationResponse.SerializeToString,
            ),
            'SubscribeCaptureStatus': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeCaptureStatus,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeCaptureStatusRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.CaptureStatusResponse.SerializeToString,
            ),
            'RespondCaptureStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondCaptureStatus,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondCaptureStatusRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondCaptureStatusResponse.SerializeToString,
            ),
            'SubscribeFormatStorage': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeFormatStorage,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeFormatStorageRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.FormatStorageResponse.SerializeToString,
            ),
            'RespondFormatStorage': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondFormatStorage,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondFormatStorageRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondFormatStorageResponse.SerializeToString,
            ),
            'SubscribeResetSettings': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeResetSettings,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeResetSettingsRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.ResetSettingsResponse.SerializeToString,
            ),
            'RespondResetSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondResetSettings,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondResetSettingsRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondResetSettingsResponse.SerializeToString,
            ),
            'SubscribeZoomInStart': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeZoomInStart,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeZoomInStartRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.ZoomInStartResponse.SerializeToString,
            ),
            'RespondZoomInStart': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondZoomInStart,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondZoomInStartRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondZoomInStartResponse.SerializeToString,
            ),
            'SubscribeZoomOutStart': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeZoomOutStart,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeZoomOutStartRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.ZoomOutStartResponse.SerializeToString,
            ),
            'RespondZoomOutStart': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondZoomOutStart,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondZoomOutStartRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondZoomOutStartResponse.SerializeToString,
            ),
            'SubscribeZoomStop': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeZoomStop,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeZoomStopRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.ZoomStopResponse.SerializeToString,
            ),
            'RespondZoomStop': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondZoomStop,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondZoomStopRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondZoomStopResponse.SerializeToString,
            ),
            'SubscribeZoomRange': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeZoomRange,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeZoomRangeRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.ZoomRangeResponse.SerializeToString,
            ),
            'RespondZoomRange': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondZoomRange,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondZoomRangeRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondZoomRangeResponse.SerializeToString,
            ),
            'SetTrackingRectangleStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTrackingRectangleStatus,
                    request_deserializer=camera__server_dot_camera__server__pb2.SetTrackingRectangleStatusRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.SetTrackingRectangleStatusResponse.SerializeToString,
            ),
            'SetTrackingOffStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTrackingOffStatus,
                    request_deserializer=camera__server_dot_camera__server__pb2.SetTrackingOffStatusRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.SetTrackingOffStatusResponse.SerializeToString,
            ),
            'SubscribeTrackingPointCommand': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeTrackingPointCommand,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeTrackingPointCommandRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.TrackingPointCommandResponse.SerializeToString,
            ),
            'SubscribeTrackingRectangleCommand': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeTrackingRectangleCommand,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeTrackingRectangleCommandRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.TrackingRectangleCommandResponse.SerializeToString,
            ),
            'SubscribeTrackingOffCommand': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeTrackingOffCommand,
                    request_deserializer=camera__server_dot_camera__server__pb2.SubscribeTrackingOffCommandRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.TrackingOffCommandResponse.SerializeToString,
            ),
            'RespondTrackingPointCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondTrackingPointCommand,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondTrackingPointCommandRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondTrackingPointCommandResponse.SerializeToString,
            ),
            'RespondTrackingRectangleCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondTrackingRectangleCommand,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondTrackingRectangleCommandRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondTrackingRectangleCommandResponse.SerializeToString,
            ),
            'RespondTrackingOffCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.RespondTrackingOffCommand,
                    request_deserializer=camera__server_dot_camera__server__pb2.RespondTrackingOffCommandRequest.FromString,
                    response_serializer=camera__server_dot_camera__server__pb2.RespondTrackingOffCommandResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mavsdk.rpc.camera_server.CameraServerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('mavsdk.rpc.camera_server.CameraServerService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CameraServerService(object):
    """Provides handling of camera interface
    """

    @staticmethod
    def SetInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SetInformation',
            camera__server_dot_camera__server__pb2.SetInformationRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.SetInformationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetVideoStreaming(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SetVideoStreaming',
            camera__server_dot_camera__server__pb2.SetVideoStreamingRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.SetVideoStreamingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetInProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SetInProgress',
            camera__server_dot_camera__server__pb2.SetInProgressRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.SetInProgressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeTakePhoto(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeTakePhoto',
            camera__server_dot_camera__server__pb2.SubscribeTakePhotoRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.TakePhotoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondTakePhoto(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondTakePhoto',
            camera__server_dot_camera__server__pb2.RespondTakePhotoRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondTakePhotoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeStartVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeStartVideo',
            camera__server_dot_camera__server__pb2.SubscribeStartVideoRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.StartVideoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondStartVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondStartVideo',
            camera__server_dot_camera__server__pb2.RespondStartVideoRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondStartVideoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeStopVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeStopVideo',
            camera__server_dot_camera__server__pb2.SubscribeStopVideoRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.StopVideoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondStopVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondStopVideo',
            camera__server_dot_camera__server__pb2.RespondStopVideoRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondStopVideoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeStartVideoStreaming(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeStartVideoStreaming',
            camera__server_dot_camera__server__pb2.SubscribeStartVideoStreamingRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.StartVideoStreamingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondStartVideoStreaming(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondStartVideoStreaming',
            camera__server_dot_camera__server__pb2.RespondStartVideoStreamingRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondStartVideoStreamingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeStopVideoStreaming(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeStopVideoStreaming',
            camera__server_dot_camera__server__pb2.SubscribeStopVideoStreamingRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.StopVideoStreamingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondStopVideoStreaming(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondStopVideoStreaming',
            camera__server_dot_camera__server__pb2.RespondStopVideoStreamingRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondStopVideoStreamingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeSetMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeSetMode',
            camera__server_dot_camera__server__pb2.SubscribeSetModeRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.SetModeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondSetMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondSetMode',
            camera__server_dot_camera__server__pb2.RespondSetModeRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondSetModeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeStorageInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeStorageInformation',
            camera__server_dot_camera__server__pb2.SubscribeStorageInformationRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.StorageInformationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondStorageInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondStorageInformation',
            camera__server_dot_camera__server__pb2.RespondStorageInformationRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondStorageInformationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeCaptureStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeCaptureStatus',
            camera__server_dot_camera__server__pb2.SubscribeCaptureStatusRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.CaptureStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondCaptureStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondCaptureStatus',
            camera__server_dot_camera__server__pb2.RespondCaptureStatusRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondCaptureStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeFormatStorage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeFormatStorage',
            camera__server_dot_camera__server__pb2.SubscribeFormatStorageRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.FormatStorageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondFormatStorage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondFormatStorage',
            camera__server_dot_camera__server__pb2.RespondFormatStorageRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondFormatStorageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeResetSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeResetSettings',
            camera__server_dot_camera__server__pb2.SubscribeResetSettingsRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.ResetSettingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondResetSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondResetSettings',
            camera__server_dot_camera__server__pb2.RespondResetSettingsRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondResetSettingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeZoomInStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeZoomInStart',
            camera__server_dot_camera__server__pb2.SubscribeZoomInStartRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.ZoomInStartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondZoomInStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondZoomInStart',
            camera__server_dot_camera__server__pb2.RespondZoomInStartRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondZoomInStartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeZoomOutStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeZoomOutStart',
            camera__server_dot_camera__server__pb2.SubscribeZoomOutStartRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.ZoomOutStartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondZoomOutStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondZoomOutStart',
            camera__server_dot_camera__server__pb2.RespondZoomOutStartRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondZoomOutStartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeZoomStop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeZoomStop',
            camera__server_dot_camera__server__pb2.SubscribeZoomStopRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.ZoomStopResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondZoomStop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondZoomStop',
            camera__server_dot_camera__server__pb2.RespondZoomStopRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondZoomStopResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeZoomRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeZoomRange',
            camera__server_dot_camera__server__pb2.SubscribeZoomRangeRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.ZoomRangeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondZoomRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondZoomRange',
            camera__server_dot_camera__server__pb2.RespondZoomRangeRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondZoomRangeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetTrackingRectangleStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SetTrackingRectangleStatus',
            camera__server_dot_camera__server__pb2.SetTrackingRectangleStatusRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.SetTrackingRectangleStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetTrackingOffStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SetTrackingOffStatus',
            camera__server_dot_camera__server__pb2.SetTrackingOffStatusRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.SetTrackingOffStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeTrackingPointCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeTrackingPointCommand',
            camera__server_dot_camera__server__pb2.SubscribeTrackingPointCommandRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.TrackingPointCommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeTrackingRectangleCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeTrackingRectangleCommand',
            camera__server_dot_camera__server__pb2.SubscribeTrackingRectangleCommandRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.TrackingRectangleCommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeTrackingOffCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/SubscribeTrackingOffCommand',
            camera__server_dot_camera__server__pb2.SubscribeTrackingOffCommandRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.TrackingOffCommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondTrackingPointCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondTrackingPointCommand',
            camera__server_dot_camera__server__pb2.RespondTrackingPointCommandRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondTrackingPointCommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondTrackingRectangleCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondTrackingRectangleCommand',
            camera__server_dot_camera__server__pb2.RespondTrackingRectangleCommandRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondTrackingRectangleCommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RespondTrackingOffCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mavsdk.rpc.camera_server.CameraServerService/RespondTrackingOffCommand',
            camera__server_dot_camera__server__pb2.RespondTrackingOffCommandRequest.SerializeToString,
            camera__server_dot_camera__server__pb2.RespondTrackingOffCommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
